services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.k8s
    ports:
      - "8000:8000"
    environment:
      - DJANGO_ALGOLIA_APPLICATION_ID=DARVP7NYE3
      - DJANGO_ALGOLIA_APPLICATION_REGION=us
      - DJANGO_ALGOLIA_EXCLUDED_LOCAL_INDEX_NAMES=None
      - DJANGO_ALGOLIA_WRITE_API_KEY=59914a40817adc02451a707a976e952f
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_AWS_ACCESS_KEY_ID=None
      - DJANGO_AWS_SECRET_ACCESS_KEY=None
      - DJANGO_CONFIGURATION=Local
      - DJANGO_DB_HOST=db
      - DJANGO_DB_NAME=nest
      - DJANGO_DB_PASSWORD=postgres
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_USER=postgres
      - DJANGO_DATABASE_URL=postgres://postgres:postgres@db:5432/nest
      - DJANGO_OPEN_AI_SECRET_KEY=None
      - DJANGO_RELEASE_VERSION=None
      - DJANGO_SECRET_KEY=None
      - DJANGO_SENTRY_DSN=None
      - DJANGO_SLACK_BOT_TOKEN=None
      - DJANGO_SLACK_SIGNING_SECRET=None
      - GITHUB_TOKEN=None
    depends_on:
      db:
        condition: service_healthy
    command: ["/home/owasp/init-backend.sh", "/home/owasp/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: postgres:16.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

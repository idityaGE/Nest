FROM python:3.13-slim as builder

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc libpq-dev && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd --system owasp && \
    useradd --system --create-home --home-dir /home/owasp -g owasp owasp && \
    python -m pip install --no-cache-dir poetry

ENV POETRY_VIRTUALENVS_IN_PROJECT=true \
    PYTHONUNBUFFERED=1

WORKDIR /home/owasp

COPY poetry.lock pyproject.toml ./
RUN poetry install --no-root --without dev --without test

COPY apps apps
COPY data data
COPY docker/entrypoint.sh entrypoint.sh
COPY docker/init-backend.sh init-backend.sh
COPY manage.py wsgi.py ./
COPY settings settings
COPY static static
COPY templates templates

FROM python:3.13-slim

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

RUN apt-get update && \
    apt-get install -y --no-install-recommends libpq-dev curl && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd --system owasp && \
    useradd --system --create-home --home-dir /home/owasp -g owasp owasp

ENV PATH="/home/owasp/.venv/bin:$PATH" \
    PYTHONUNBUFFERED=1

WORKDIR /home/owasp

COPY --from=builder /home/owasp /home/owasp
RUN chmod +x /home/owasp/entrypoint.sh
RUN chmod +x /home/owasp/init-backend.sh

# Add health check for Kubernetes
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health/ || exit 1

USER owasp

EXPOSE 8000

CMD ["/home/owasp/entrypoint.sh"]
